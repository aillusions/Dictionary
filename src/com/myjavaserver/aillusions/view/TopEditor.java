package com.myjavaserver.aillusions.view;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import com.myjavaserver.aillusions.Dictionary;
import com.myjavaserver.aillusions.model.Pair;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Random;

/**
 * This code was edited or generated using CloudGarden's Jigloo SWT/Swing GUI
 * Builder, which is free for non-commercial use. If Jigloo is being used
 * commercially (ie, by a corporation, company or business for any purpose
 * whatever) then you should purchase a license for each developer using Jigloo.
 * Please visit www.cloudgarden.com for details. Use of Jigloo implies
 * acceptance of these licensing terms. A COMMERCIAL LICENSE HAS NOT BEEN
 * PURCHASED FOR THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED LEGALLY FOR
 * ANY CORPORATE OR COMMERCIAL PURPOSE.
 */
public class TopEditor extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	Dictionary dictionary = new Dictionary("words.xml");
	int prevSelectedIndex = 0;
	Random nextSelRandom = new Random(0);

	/** Creates new form TopEditor */
	public TopEditor() {
		initComponents();
		dictionary.Load();
		WordsList_Lst.setListData(dictionary.getAllWords());
		jListSamples.setListData(new String[] {});
		refresh(true, true);
		WordsList_Lst.setSelectedIndex(0);
	}

	private void Alert(String mess) {
		JOptionPane.showMessageDialog(new JFrame("FrameDemo"), mess);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents() {
		this.setIconImage(new ImageIcon(getClass().getResource("iconA16.GIF")).getImage());
		jButton1 = new javax.swing.JButton();
		Word_TextF = new javax.swing.JTextField();
		Translate_TextF = new javax.swing.JTextField();
		Transcription_TextF = new javax.swing.JTextField();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();
		jButton9 = new javax.swing.JButton();
		Save_Btn = new javax.swing.JButton();
		Load_Btn = new javax.swing.JButton();
		jButton14 = new javax.swing.JButton();
		jButton15 = new javax.swing.JButton();
		jButton16 = new javax.swing.JButton();
		jButton17 = new javax.swing.JButton();
		jButton18 = new javax.swing.JButton();
		jButton19 = new javax.swing.JButton();
		jButton20 = new javax.swing.JButton();
		jButton21 = new javax.swing.JButton();
		jButton22 = new javax.swing.JButton();
		jButton23 = new javax.swing.JButton();
		jButton24 = new javax.swing.JButton();
		jButton25 = new javax.swing.JButton();
		getContentPane().setLayout(null);
		getContentPane().add(jButton25);
		jButton26 = new javax.swing.JButton();
		jButton27 = new javax.swing.JButton();
		jButton28 = new javax.swing.JButton();
		jButton29 = new javax.swing.JButton();
		jButton30 = new javax.swing.JButton();
		jButton31 = new javax.swing.JButton();
		jButton32 = new javax.swing.JButton();
		jButton33 = new javax.swing.JButton();
		jButton34 = new javax.swing.JButton();
		jButton35 = new javax.swing.JButton();
		jButton36 = new javax.swing.JButton();
		jButton37 = new javax.swing.JButton();
		jButton38 = new javax.swing.JButton();
		jButton39 = new javax.swing.JButton();
		jButton40 = new javax.swing.JButton();
		getContentPane().add(jButton40);
		jButton41 = new javax.swing.JButton();
		getContentPane().add(jButton41);
		jButton42 = new javax.swing.JButton();
		jButton43 = new javax.swing.JButton();
		jButton44 = new javax.swing.JButton();
		Remove_Btn = new javax.swing.JButton();
		getContentPane().add(Remove_Btn);
		getContentPane().add(Save_Btn);
		getContentPane().add(Load_Btn);
		jButton11 = new javax.swing.JButton();
		jButton12 = new javax.swing.JButton();
		jButton13 = new javax.swing.JButton();
		Rename_Btn = new javax.swing.JButton();
		getContentPane().add(Rename_Btn);
		getContentPane().add(jButton14);
		getContentPane().add(jButton32);
		getContentPane().add(jButton17);
		getContentPane().add(jButton19);
		getContentPane().add(jButton20);
		getContentPane().add(jButton21);
		getContentPane().add(jButton23);
		getContentPane().add(jButton24);
		getContentPane().add(jButton3);
		getContentPane().add(jButton11);
		getContentPane().add(jButton12);
		getContentPane().add(jButton13);
		getContentPane().add(jButton1);
		getContentPane().add(jButton5);
		getContentPane().add(jButton9);
		getContentPane().add(jButton6);
		getContentPane().add(jButton4);
		getContentPane().add(jButton8);
		getContentPane().add(jButton7);
		getContentPane().add(jButton2);
		getContentPane().add(Transcription_TextF);
		getContentPane().add(Translate_TextF);
		getContentPane().add(Word_TextF);
		getContentPane().add(jButton37);
		getContentPane().add(jButton16);
		getContentPane().add(jButton35);
		getContentPane().add(jButton15);
		getContentPane().add(jButton27);
		getContentPane().add(jButton26);
		getContentPane().add(jButton42);
		getContentPane().add(jButton39);
		getContentPane().add(jButton30);
		getContentPane().add(jButton36);
		getContentPane().add(jButton18);
		getContentPane().add(jButton31);
		getContentPane().add(jButton33);
		getContentPane().add(jButton38);
		getContentPane().add(jButton34);
		getContentPane().add(jButton22);
		getContentPane().add(jButton28);
		getContentPane().add(jButton29);
		getContentPane().add(jButton43);
		getContentPane().add(jButton44);
		Translate_TextF.setBounds(12, 38, 224, 21);
		{
			jButtRemSample = new JButton();
			getContentPane().add(jButtRemSample);
			jButtRemSample.setText("del");
			jButtRemSample.setMargin(new java.awt.Insets(0, 0, 0, 0));
			jButtRemSample.setBounds(356, 347, 29, 19);
			jButtRemSample.setFont(new java.awt.Font("Arial", 0, 11));
			jButtRemSample.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButtRemSampleMouseReleased(evt);
				}
			});
		}
		{
			jButtPlay = new JButton();
			getContentPane().add(jButtPlay);
			jButtPlay.setText(">");
			jButtPlay.setBounds(243, 64, 24, 21);
			jButtPlay.setForeground(new java.awt.Color(0, 0, 0));
			jButtPlay.setToolTipText("Play");
			jButtPlay.setMargin(new java.awt.Insets(0, 0, 0, 0));
			jButtPlay.setFont(new java.awt.Font("Arial", 0, 11));
			jButtPlay.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButtPlayMouseReleased(evt);
				}
			});
		}
		{
			jButtRecordding = new JButton();
			getContentPane().add(jButtRecordding);
			jButtRecordding.setText("start");
			jButtRecordding.setForeground(new java.awt.Color(255, 0, 0));
			jButtRecordding.setBounds(303, 64, 53, 21);
			jButtRecordding.setToolTipText("Recording pronunciation");
			jButtRecordding.setMargin(new java.awt.Insets(0, 0, 0, 0));
			jButtRecordding.setFont(new java.awt.Font("Arial", 0, 11));
			jButtRecordding.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButtRecordMouseReleased(evt);
				}
			});
		}
		{
			jButton10 = new JButton();
			getContentPane().add(jButton10);
			jButton10.setText("||");
			jButton10.setMargin(new java.awt.Insets(0, 0, 0, 0));
			jButton10.setForeground(new java.awt.Color(255, 0, 0));
			jButton10.setToolTipText("Pause");
			jButton10.setBounds(273, 64, 24, 21);
			jButton10.setEnabled(false);
			jButton10.setFont(new java.awt.Font("Arial", 0, 11));
		}
		{

			jButtDeleteRecord = new JButton();
			getContentPane().add(jButtDeleteRecord);
			jButtDeleteRecord.setText("X");
			jButtDeleteRecord.setMargin(new java.awt.Insets(0, 0, 0, 0));
			jButtDeleteRecord.setForeground(new java.awt.Color(0, 0, 0));
			jButtDeleteRecord.setToolTipText("Delete record");
			jButtDeleteRecord.setBounds(361, 64, 24, 21);
			jButtDeleteRecord.setFont(new java.awt.Font("Arial", 0, 11));
			jButtDeleteRecord.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButtDeleteRecordMouseReleased(evt);
				}
			});
		}
		{
			jChBoxPlayOnSelections = new JCheckBox();
			getContentPane().add(jChBoxPlayOnSelections);
			jChBoxPlayOnSelections.setText("Pronunciation");
			jChBoxPlayOnSelections.setBounds(243, 38, 85, 18);
			jChBoxPlayOnSelections
					.setToolTipText("Play record by selection in navigator");
			jChBoxPlayOnSelections.setFont(new java.awt.Font("Arial", 0, 11));
		}
		{
			jTxtSearch = new JTextField();
			getContentPane().add(jTxtSearch);
			jTxtSearch.setBounds(391, 345, 106, 21);
			jTxtSearch.addKeyListener(new KeyAdapter() {
				public void keyReleased(KeyEvent evt) {
					jTxtSearchKeyReleased(evt);
				}
			});
		}
		{
			jTextSamplesSearch = new JTextField();
			getContentPane().add(jTextSamplesSearch);
			jTextSamplesSearch.setBounds(12, 346, 344, 21);
			jTextSamplesSearch.addKeyListener(new KeyAdapter() {
				public void keyReleased(KeyEvent evt) {
					jTextSamplesSearchKeyReleased(evt);
				}
			});
		}
		{
			jScrollPane2 = new JScrollPane();
			getContentPane().add(jScrollPane2);
			jScrollPane2.setBounds(12, 208, 373, 132);
			{
				ListModel jListSamplesModel = new DefaultComboBoxModel(
						new String[] { "Item One", "Item Two" });
				jListSamples = new JList();
				jScrollPane2.setViewportView(jListSamples);
				jListSamples.setModel(jListSamplesModel);
				jListSamples.setBounds(12, 208, 373, 132);
				jListSamples.setFont(new java.awt.Font("Arial", 0, 13));
				jListSamples.addMouseListener(new MouseAdapter() {
					public void mouseReleased(MouseEvent evt) {
						jListSamplesMouseReleased(evt);
					}
				});

				ListSelectionListener listSelectionListener2 = new ListSelectionListener() {
					public void valueChanged(
							ListSelectionEvent listSelectionEvent) {
						if (!listSelectionEvent.getValueIsAdjusting()) {
							if (jListSamples.getSelectedIndex() == -1) {
								dictionary.setCurrSample(null);
							} else {
								dictionary.setCurrSample(jListSamples
										.getSelectedValue().toString());
							}
							{
								// refresh(false, false);
								if (jChBoxPlayOnSelections.isSelected()
										&& jListSamples.getSelectedIndex() != -1)
									dictionary.playCurrentAudioRecord(true, false);

							}
						}
					}
				};

				jListSamples.addListSelectionListener(listSelectionListener2);

			}
		}
		{
			jScrollPane1 = new JScrollPane();
			getContentPane().add(jScrollPane1);
			jScrollPane1.setBounds(391, 9, 168, 330);
			{
				ListModel WordsList_LstModel = new DefaultComboBoxModel(
						new String[] { "Item One", "Item Two" });
				WordsList_Lst = new JList();
				jScrollPane1.setViewportView(WordsList_Lst);
				WordsList_Lst.setModel(WordsList_LstModel);
				WordsList_Lst.setBounds(391, 9, 168, 330);
				WordsList_Lst.setFont(new java.awt.Font("Arial", 0, 11));
				WordsList_Lst.addMouseListener(new MouseAdapter() {
					public void mouseReleased(MouseEvent evt) {
						WordsList_LstMouseReleased(evt);
					}
				});
				WordsList_Lst.addKeyListener(new KeyAdapter() {
					public void keyReleased(KeyEvent evt) {
						WordsList_LstKeyReleased(evt);
					}
				});

				ListSelectionListener listSelectionListener = new ListSelectionListener() {
					public void valueChanged(
							ListSelectionEvent listSelectionEvent) {
						if (!listSelectionEvent.getValueIsAdjusting()) {
							if (dictionary.getCurrentPair() != null)
								if (!dictionary.aplyCurrWordChanged(
										Translate_TextF.getText(),
										Transcription_TextF.getText())) {
									Alert("Your input was not aplyed!");
								}
							if (!dictionary.setSelected((String) WordsList_Lst
									.getSelectedValue())) {
								// Alert("Could not select!");
							} else {
								refresh(false, true);
								if (jChBoxPlayOnSelections.isSelected())
									dictionary.playCurrentAudioRecord(true, false);
							}
							WordsList_Lst.setSelectedValue(WordsList_Lst
									.getSelectedValue(), true);
							// System.out.println(444);
						}
					}

				};
				WordsList_Lst.addListSelectionListener(listSelectionListener);
			}
		}
		{
			word_start = new JButton();
			word_start.setMargin(new java.awt.Insets(1, 1, 1, 1));
			word_start.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
			getContentPane().add(word_start);
			word_start.setText("W");
			word_start.setBounds(359, 38, 25, 20);
			word_start.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					word_startMouseReleased(evt);
				}
			});
		}
		{
			runTrainerBtn = new JButton();
			getContentPane().add(runTrainerBtn);
			runTrainerBtn.setText("T");
			runTrainerBtn.setMargin(new java.awt.Insets(1, 1, 1, 1));
			runTrainerBtn.setFont(new java.awt.Font("Lucida Sans Unicode", 0,
					11));
			runTrainerBtn.setBounds(332, 38, 25, 20);
			runTrainerBtn.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					runTrainerBtnMouseReleased(evt);
				}
			});
		}
		{
			addToRight_one = new JButton();
			getContentPane().add(addToRight_one);
			addToRight_one.setText("->");
			addToRight_one.setMargin(new java.awt.Insets(1, 1, 1, 1));
			addToRight_one.setFont(new java.awt.Font("Lucida Sans Unicode", 0,
					11));
			addToRight_one.setBounds(565, 74, 31, 20);
			addToRight_one.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					addToRight_oneMouseReleased(evt);
				}
			});
		}
		{
			addToRight_all = new JButton();
			getContentPane().add(addToRight_all);
			addToRight_all.setText(">>");
			addToRight_all.setMargin(new java.awt.Insets(1, 1, 1, 1));
			addToRight_all.setFont(new java.awt.Font("Lucida Sans Unicode", 0,
					11));
			addToRight_all.setBounds(565, 100, 31, 20);
			addToRight_all.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					addToRight_allMouseReleased(evt);
				}
			});
		}
		{
			dellFromRight_one = new JButton();
			getContentPane().add(dellFromRight_one);
			dellFromRight_one.setText("<-");
			dellFromRight_one.setMargin(new java.awt.Insets(1, 1, 1, 1));
			dellFromRight_one.setFont(new java.awt.Font("Lucida Sans Unicode",
					0, 11));
			dellFromRight_one.setBounds(565, 153, 31, 20);
			dellFromRight_one.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					dellFromRight_oneMouseReleased(evt);
				}
			});
		}
		{
			dellFromRight_all = new JButton();
			getContentPane().add(dellFromRight_all);
			dellFromRight_all.setText("<<");
			dellFromRight_all.setMargin(new java.awt.Insets(1, 1, 1, 1));
			dellFromRight_all.setFont(new java.awt.Font("Lucida Sans Unicode",
					0, 11));
			dellFromRight_all.setBounds(565, 179, 31, 20);
			dellFromRight_all.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					dellFromRight_allMouseReleased(evt);
				}
			});
		}
		{
			jScrollPane3 = new JScrollPane();
			getContentPane().add(jScrollPane3);
			jScrollPane3.setBounds(608, 12, 162, 327);
			{
				ListModel jList1Model = new DefaultComboBoxModel(new String[] {
						"Item One", "Item Two" });
				InUseJList = new JList();
				jScrollPane3.setViewportView(InUseJList);
				InUseJList.setModel(jList1Model);
				InUseJList.setSelectedIndex(0);
				InUseJList.setFont(new java.awt.Font("Arial", 0, 11));
				InUseJList.setBounds(608, 12, 162, 327);
				InUseJList.addKeyListener(new KeyAdapter() {
					public void keyReleased(KeyEvent evt) {
						InUseJListKeyReleased(evt);
					}
				});
				InUseJList.addMouseListener(new MouseAdapter() {
					public void mouseReleased(MouseEvent evt) {
						InUseJListMouseReleased(evt);
					}
				});

				ListSelectionListener InUseJListlistSelectionListener = new ListSelectionListener() {
					public void valueChanged(
							ListSelectionEvent listSelectionEvent) {

						if (!listSelectionEvent.getValueIsAdjusting()) {
							if (InUseJList.isFocusOwner()
									|| selectNextRandomBtn.isFocusOwner())
								WordsList_Lst.setSelectedValue(InUseJList
										.getSelectedValue(), true);
						}
					}

				};
				InUseJList
						.addListSelectionListener(InUseJListlistSelectionListener);

			}
		}
		{
			selectNextRandomBtn = new JButton();
			getContentPane().add(selectNextRandomBtn);
			selectNextRandomBtn.setText("> go next random >");
			selectNextRandomBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
			selectNextRandomBtn.setFont(new java.awt.Font("Arial", 0, 11));
			selectNextRandomBtn.setBounds(608, 345, 162, 20);
			selectNextRandomBtn.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					selectNextRandomBtnMouseReleased(evt);
				}
			});
		}
		{
			jButton45 = new JButton();
			getContentPane().add(jButton45);
			jButton45.setText("W");
			jButton45.setMargin(new java.awt.Insets(1, 1, 1, 1));
			jButton45.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
			jButton45.setBounds(359, 38, 25, 20);
			jButton45.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButton45MouseReleased(evt);
				}
			});
		}
		{
			jButton46 = new JButton();
			getContentPane().add(jButton46);
			jButton46.setText("W");
			jButton46.setMargin(new java.awt.Insets(1, 1, 1, 1));
			jButton46.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
			jButton46.setBounds(565, 36, 25, 21);
			jButton46.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					inUseOnlyWordsShowInWord(evt);
				}
			});
		}
		{
			jButton47 = new JButton();
			getContentPane().add(jButton47);
			jButton47.setText("W");
			jButton47.setMargin(new java.awt.Insets(1,1,1,1));
			jButton47.setFont(new java.awt.Font("Lucida Sans Unicode",0,11));
			jButton47.setBounds(365, 179, 21, 21);
			jButton47.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButton47MouseReleased(evt);
				}
			});
		}
		{
			
			jButton48 = new JButton();
			getContentPane().add(jButton48);
			jButton48.setText("\u25b2");
			jButton48.setMargin(new java.awt.Insets(1,1,1,1));
			jButton48.setFont(new java.awt.Font("Lucida Sans Unicode",0,11));
			jButton48.setBounds(340, 179, 23, 21);
			jButton48.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButton48MouseReleased(evt);
				}
			});
		}
		{
			jButton49 = new JButton();
			getContentPane().add(jButton49);
			jButton49.setText(">");
			jButton49.setMargin(new java.awt.Insets(1,1,1,1));
			jButton49.setFont(new java.awt.Font("Lucida Sans Unicode",0,11));
			jButton49.setBounds(363, 98, 22, 23);
			jButton49.addMouseListener(new MouseAdapter() {
				public void mouseReleased(MouseEvent evt) {
					jButton49MouseReleased(evt);
				}
			});
		}

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Top Dictionary");
		setLocationByPlatform(true);
		setResizable(false);
		this.addMouseListener(new MouseAdapter() {
			public void mouseReleased(MouseEvent evt) {
				thisMouseReleased(evt);
			}
		});
		jButton1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton1.setText("\u00e6");
		jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton1.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton1.setBounds(14, 97, 24, 25);
		jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		Word_TextF.setEditable(false);
		Word_TextF.setFont(new java.awt.Font("Tahoma", 1, 11));
		Word_TextF.setBounds(12, 11, 224, 21);
		Word_TextF.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				Word_TextFKeyReleased(evt);
			}
		});

		Translate_TextF.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				Translate_TextFKeyReleased(evt);
			}
		});

		Transcription_TextF.setFont(new java.awt.Font("Lucida Sans Unicode", 0,
				14));
		Transcription_TextF.setBounds(12, 65, 224, 25);
		Transcription_TextF.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				Transcription_TextFKeyReleased(evt);
			}
		});

		jButton2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton2.setText("\u0259");
		jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton2.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton2.setBounds(217, 97, 24, 25);
		jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton3.setText("\u028c");
		jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton3.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton3.setBounds(246, 97, 24, 25);
		jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton4.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton4.setText("\u03b8");
		jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton4.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton4.setBounds(130, 97, 24, 25);
		jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton5.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton5.setText("\u0254");
		jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton5.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton5.setBounds(43, 97, 24, 25);
		jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton6.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton6.setText("\u014b");
		jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton6.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton6.setBounds(101, 97, 24, 25);
		jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton7.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton7.setText("\u025b");
		jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton7.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton7.setBounds(188, 97, 24, 25);
		jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton8.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton8.setText("\u0131");
		jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton8.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton8.setBounds(159, 97, 24, 25);
		jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton9.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton9.setText("\u222b");
		jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton9.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton9.setBounds(72, 97, 24, 25);
		jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		WordsList_Lst.setModel(new javax.swing.AbstractListModel() {
			private static final long serialVersionUID = 1L;
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4",
					"Item 5" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});

		Save_Btn.setText("save");
		Save_Btn.setMargin(new java.awt.Insets(0, 0, 0, 0));
		Save_Btn.setBounds(314, 11, 70, 20);
		Save_Btn.setFont(new java.awt.Font("Arial", 0, 11));
		Save_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				Save_BtnMouseReleased(evt);
			}
		});

		Load_Btn.setText("load");
		Load_Btn.setMargin(new java.awt.Insets(0, 0, 0, 0));
		Load_Btn.setBounds(242, 11, 66, 20);
		Load_Btn.setFont(new java.awt.Font("Arial", 0, 11));
		Load_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				Load_BtnMouseReleased(evt);
			}
		});

		jButton14.setText("a");
		jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton14.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton14.setBounds(43, 153, 24, 21);
		jButton14.setFont(new java.awt.Font("Arial", 0, 11));
		jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton15.setText("b");
		jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton15.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton15.setBounds(164, 179, 24, 21);
		jButton15.setFont(new java.awt.Font("Arial", 0, 11));
		jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton16.setText("c");
		jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton16.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton16.setBounds(108, 179, 24, 21);
		jButton16.setFont(new java.awt.Font("Arial", 0, 11));

		jButton17.setText("d");
		jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton17.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton17.setBounds(98, 153, 24, 21);
		jButton17.setFont(new java.awt.Font("Arial", 0, 11));
		jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton18.setText("e");
		jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton18.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton18.setBounds(77, 127, 24, 21);
		jButton18.setFont(new java.awt.Font("Arial", 0, 11));
		jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton19.setText("f");
		jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton19.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton19.setBounds(126, 153, 24, 21);
		jButton19.setFont(new java.awt.Font("Arial", 0, 11));
		jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton20.setText("g");
		jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton20.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton20.setBounds(153, 153, 24, 21);
		jButton20.setFont(new java.awt.Font("Arial", 0, 11));
		jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton21.setText("h");
		jButton21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton21.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton21.setBounds(181, 153, 24, 21);
		jButton21.setFont(new java.awt.Font("Arial", 0, 11));
		jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton22.setText("i");
		jButton22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton22.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton22.setBounds(220, 127, 24, 21);
		jButton22.setFont(new java.awt.Font("Arial", 0, 11));
		jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton23.setText("j");
		jButton23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton23.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton23.setBounds(209, 153, 24, 21);
		jButton23.setFont(new java.awt.Font("Arial", 0, 11));
		jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton24.setText("k");
		jButton24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton24.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton24.setBounds(236, 153, 24, 21);
		jButton24.setFont(new java.awt.Font("Arial", 0, 11));
		jButton24.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton25.setText("l");
		jButton25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton25.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton25.setBounds(264, 154, 24, 21);
		jButton25.setFont(new java.awt.Font("Arial", 0, 11));
		jButton25.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton26.setText("m");
		jButton26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton26.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton26.setBounds(220, 179, 24, 21);
		jButton26.setFont(new java.awt.Font("Arial", 0, 11));
		jButton26.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton27.setText("n");
		jButton27.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton27.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton27.setBounds(192, 179, 24, 21);
		jButton27.setFont(new java.awt.Font("Arial", 0, 11));
		jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton28.setText("o");
		jButton28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton28.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton28.setBounds(248, 127, 24, 21);
		jButton28.setFont(new java.awt.Font("Arial", 0, 11));
		jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton29.setText("p");
		jButton29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton29.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton29.setBounds(277, 127, 24, 21);
		jButton29.setFont(new java.awt.Font("Arial", 0, 11));
		jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton30.setText("q");
		jButton30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton30.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton30.setBounds(21, 127, 24, 21);
		jButton30.setFont(new java.awt.Font("Arial", 0, 11));
		jButton30.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton31.setText("r");
		jButton31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton31.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton31.setBounds(106, 127, 24, 21);
		jButton31.setFont(new java.awt.Font("Arial", 0, 11));
		jButton31.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton32.setText("s");
		jButton32.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton32.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton32.setBounds(70, 153, 24, 21);
		jButton32.setFont(new java.awt.Font("Arial", 0, 11));
		jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton33.setText("t");
		jButton33.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton33.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton33.setBounds(134, 127, 24, 21);
		jButton33.setFont(new java.awt.Font("Arial", 0, 11));
		jButton33.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton34.setText("u");
		jButton34.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton34.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton34.setBounds(191, 127, 24, 21);
		jButton34.setFont(new java.awt.Font("Arial", 0, 11));
		jButton34.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton35.setText("v");
		jButton35.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton35.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton35.setBounds(136, 179, 24, 21);
		jButton35.setFont(new java.awt.Font("Arial", 0, 11));
		jButton35.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton36.setText("w");
		jButton36.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton36.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton36.setBounds(49, 127, 24, 21);
		jButton36.setFont(new java.awt.Font("Arial", 0, 11));
		jButton36.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton37.setText("x");
		jButton37.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton37.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton37.setBounds(80, 179, 24, 21);
		jButton37.setFont(new java.awt.Font("Arial", 0, 11));
		jButton37.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton38.setText("y");
		jButton38.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton38.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton38.setBounds(163, 127, 24, 21);
		jButton38.setFont(new java.awt.Font("Arial", 0, 11));
		jButton38.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton39.setText("z");
		jButton39.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton39.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton39.setBounds(53, 179, 24, 21);
		jButton39.setFont(new java.awt.Font("Arial", 0, 11));
		jButton39.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton40.setText(":");
		jButton40.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton40.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton40.setBounds(292, 153, 24, 21);
		jButton40.setFont(new java.awt.Font("Arial", 0, 11));
		jButton40.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton41.setText("'");
		jButton41.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton41.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton41.setBounds(320, 153, 24, 21);
		jButton41.setFont(new java.awt.Font("Arial", 0, 11));
		jButton41.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton42.setText(" ");
		jButton42.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton42.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton42.setBounds(250, 179, 84, 21);
		jButton42.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton43.setText("(");
		jButton43.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton43.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton43.setBounds(305, 127, 24, 21);
		jButton43.setFont(new java.awt.Font("Arial", 0, 11));
		jButton43.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton44.setText(")");
		jButton44.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton44.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton44.setBounds(334, 127, 24, 21);
		jButton44.setFont(new java.awt.Font("Arial", 0, 11));
		jButton44.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		Remove_Btn.setText("del");
		Remove_Btn.setMargin(new java.awt.Insets(0, 0, 0, 0));
		Remove_Btn.setBounds(530, 345, 29, 20);
		Remove_Btn.setFont(new java.awt.Font("Arial", 0, 11));
		Remove_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				Remove_BtnMouseReleased(evt);
			}
		});

		jButton11.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton11.setText("\u01b7");
		jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton11.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton11.setBounds(275, 97, 24, 25);
		jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton12.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton12.setText("\u00f0");
		jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton12.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton12.setBounds(304, 97, 24, 25);
		jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		jButton13.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11));
		jButton13.setText("-");
		jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton13.setMargin(new java.awt.Insets(1, 1, 1, 1));
		jButton13.setBounds(333, 97, 24, 25);
		jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				literalButtonsMouseReleased(evt);
			}
		});

		Rename_Btn.setText("edit");
		Rename_Btn.setMargin(new java.awt.Insets(0, 0, 0, 0));
		Rename_Btn.setBounds(497, 345, 32, 20);
		Rename_Btn.setFont(new java.awt.Font("Arial", 0, 11));
		Rename_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				Rename_BtnMouseReleased(evt);
			}
		});

		// countLab.setText(""");
		this.setTitle("Top Dictionary");

		pack();
		this.setSize(790, 400);
	}// </editor-fold>//GEN-END:initComponents

	private void Transcription_TextFKeyReleased(java.awt.event.KeyEvent evt) {
		if (!dictionary.aplyCurrWordChanged(Translate_TextF.getText(),
				Transcription_TextF.getText())) {
			Alert("Your input was not aplyed!");
		}
	}

	private void Translate_TextFKeyReleased(java.awt.event.KeyEvent evt) {
		if (!dictionary.aplyCurrWordChanged(Translate_TextF.getText(),
				Transcription_TextF.getText())) {
			Alert("Your input was not aplyed!");
		}
	}

	private void Word_TextFKeyReleased(java.awt.event.KeyEvent evt) {
		if (!dictionary.aplyCurrWordChanged(Translate_TextF.getText(),
				Transcription_TextF.getText())) {
			Alert("Your input was not aplyed!");
		}
	}

	private void literalButtonsMouseReleased(java.awt.event.MouseEvent evt) {
		if (dictionary.getCurrentPair() != null) {
			Transcription_TextF.setText(dictionary.getCurrentPair()
					.getTranscription()
					+ ((JButton) evt.getSource()).getText());
			if (!dictionary.aplyCurrWordChanged(Translate_TextF.getText(),
					Transcription_TextF.getText())) {
				Alert("Your input was not aplyed!");
			}
		} else {
			Alert("You mast select one before!");
		}
	}

	/**
	 * 
	 * @param needToRefreshWordList
	 * @param needToRefreshSamplesList
	 */

	private void refresh(boolean needToRefreshWordList,
			boolean needToRefreshSamplesList) {

		if (dictionary.getAudioMan().recorder == null) {
			jButtRecordding.setText("start");
			jButtPlay.setEnabled(true);

			if (dictionary.isCurrentItemAlreadyRecorded()) {
				jButtPlay.setEnabled(true);
				jButtDeleteRecord.setEnabled(true);
				jButtRecordding.setEnabled(false);
			} else {
				jButtPlay.setEnabled(false);
				jButtDeleteRecord.setEnabled(false);
				jButtRecordding.setEnabled(true);
			}

		} else {
			jButtRecordding.setText("stop");
			jButtPlay.setEnabled(false);
		}

		if (dictionary.getCurrentPair() == null) {

			this.setTitle("Top Dictionary - none : ");
			Word_TextF.setText("");
			Translate_TextF.setText("");
			Transcription_TextF.setText("");
			jListSamples.setListData(new String[] {});

			jButtPlay.setEnabled(false);
			jButtDeleteRecord.setEnabled(false);
			jButtRecordding.setEnabled(false);

		} else {
			this.setTitle("Top Dictionary - "
					+ (WordsList_Lst.getSelectedIndex() + 1) + " : "
					+ new Integer(dictionary.getAllWords().length).toString());

			Word_TextF.setText(dictionary.getCurrentPair().getEnglish());
			Translate_TextF.setText(dictionary.getCurrentPair().getRussian());
			Transcription_TextF.setText(dictionary.getCurrentPair()
					.getTranscription());

			if (needToRefreshSamplesList) {
				String s = null;
				if (dictionary.getCurrSample() != null)
					s = dictionary.getCurrSample();
				if (dictionary.getCurrentPair().getSamples() != null)
					jListSamples.setListData(dictionary.getCurrentPair()
							.getSamples());
				else
					jListSamples.setListData(new String[] {});
				if (dictionary.getCurrentPair().getSamples() != null)
					jListSamples.setSelectedValue(s, true);

			}

		}
		if (needToRefreshWordList) {
			String s = null;
			if (dictionary.getCurrentPair() != null)
				s = dictionary.getCurrentPair().getEnglish();
			WordsList_Lst.setListData(dictionary.getAllWords());
			if (dictionary.setSelected(s))
				if (dictionary.getCurrentPair() != null)
					WordsList_Lst.setSelectedValue(dictionary.getCurrentPair()
							.getEnglish(), true);
		}

		if (dictionary.getCurrentPair() == null) {
			if (dictionary.getAllWords().length > 0)
				WordsList_Lst.setSelectedValue(dictionary.getAllWords()[0],
						true);
			else
				WordsList_Lst.setSelectedValue(null, true);
		}
		inUseListRefresh();
	}

	private void Rename_BtnMouseReleased(java.awt.event.MouseEvent evt) {
		if (dictionary.getCurrentPair() != null) {
			dictionary.renameCurrent(null);
			refresh(true, true);
		}
	}

	/**
	 * Handler of pressing "delete current selected English word" button
	 * 
	 * @param evt
	 */
	private void Remove_BtnMouseReleased(java.awt.event.MouseEvent evt) {
		if (dictionary.getCurrentPair() == null) {
			Alert("You have to select one before!");
		}
		dictionary.removeCurrent();
		refresh(true, true);
	}

	/**
	 * Handler of pressing "add new English word" button
	 * 
	 * @param evt
	 */
	private void Add_btnMouseReleased(java.awt.event.MouseEvent evt) {
		boolean addedSuccess = false;
		if (jTxtSearch.getText().equals(""))
			addedSuccess = dictionary.addNew(null);
		else
			addedSuccess = dictionary.addNew(jTxtSearch.getText());

		if (addedSuccess)
			jTxtSearch.setText("");
		refresh(true, true);
	}

	/**
	 * Handler of key pressing in text search field by words list
	 * 
	 * @param evt
	 */
	private void jTxtSearchKeyReleased(KeyEvent evt) {
		String currText = jTxtSearch.getText().trim();

		// adding new word
		if (evt.getKeyCode() == 10) {
			boolean addedSuccess = false;
			if (currText.equals(""))
				addedSuccess = dictionary.addNew(null);
			else
				addedSuccess = dictionary.addNew(currText);

			if (addedSuccess)
				jTxtSearch.setText("");

			refresh(true, true);
		} else {
			if (!currText.equals("")) {
				for (int i = prevSelectedIndex + 1; i < dictionary
						.getAllWords().length; i++) {
					if (dictionary.getAllWords()[i].indexOf(currText) == 0) {
						WordsList_Lst.setSelectedValue(
								dictionary.getAllWords()[i], true);
						prevSelectedIndex = i;
						break;
					}
					if (i == (dictionary.getAllWords().length - 1)) {
						prevSelectedIndex = 0;
						// i = 0;
					}
				}
			}
		}
	}

	/**
	 * Handler of pressing "load from storage" button
	 * 
	 * @param evt
	 */
	private void Load_BtnMouseReleased(java.awt.event.MouseEvent evt) {
		dictionary.Load();
		System.out.println("1");
		refresh(true, true);
	}

	/**
	 * Handler of pressing "save to storage" button
	 * 
	 * @param evt
	 */
	private void Save_BtnMouseReleased(java.awt.event.MouseEvent evt) {
		dictionary.saveInFile();
	}

	/**
	 * Handler of pressing "add new sample to list" button
	 * 
	 * @param evt
	 */
	private void jButtAddSampleMouseReleased(MouseEvent evt) {
		if (jTextSamplesSearch.getText().equals(""))
			dictionary.addNewSample(null);
		else {
			if (dictionary.addNewSample(jTextSamplesSearch.getText()))
				jTextSamplesSearch.setText("");
		}
		refresh(false, true);
	}

	/**
	 * Handler of key pressing in text search field by samples list
	 * 
	 * @param evt
	 */
	private void jTextSamplesSearchKeyReleased(KeyEvent evt) {
		if (evt.getKeyCode() == 10) {
			if (!jTextSamplesSearch.getText().equals(""))
				if (dictionary.addNewSample(jTextSamplesSearch.getText())) {
					jTextSamplesSearch.setText("");
				}
			refresh(false, true);
		}
	}

	private void jButtRemSampleMouseReleased(MouseEvent evt) {
		dictionary.remCurrSample();
		refresh(false, true);
	}

	private void jListSamplesMouseReleased(MouseEvent evt) {
		dictionary.setCurrSample((String) jListSamples.getSelectedValue());
		refresh(false, false);
	}

	private void jButtRecordMouseReleased(MouseEvent evt) {
		if (dictionary.getAudioMan().recorder == null) {
			dictionary.startRecording(null);
		} else {
			dictionary.stopRecording();
		}
		refresh(false, false);
	}

	private void jButtPlayMouseReleased(MouseEvent evt) {
		dictionary.playCurrentAudioRecord(true, false);
	}

	private void jButtDeleteRecordMouseReleased(MouseEvent evt) {
		if (dictionary.isCurrentItemAlreadyRecorded()) {
			// if (JOptionPane.showConfirmDialog(null, "Really?") == 0) {
			dictionary.deleteCurrentAudioRecord();
			refresh(false, false);
			// }
		}
	}

	private void WordsList_LstKeyReleased(KeyEvent evt) {

		if (evt.getKeyCode() == 155) {// Ins
			if (WordsList_Lst.getSelectedIndex() < dictionary.getAllWords().length) {
				dictionary.getCurrentPair().setInuse(true);
				WordsList_Lst
						.setSelectedIndex(WordsList_Lst.getSelectedIndex() + 1);
			}
		}
		if (evt.getKeyCode() == 127) {// Del
			if (WordsList_Lst.getSelectedIndex() < dictionary.getAllWords().length) {
				dictionary.getCurrentPair().setInuse(false);
				WordsList_Lst
						.setSelectedIndex(WordsList_Lst.getSelectedIndex() + 1);
			}
		}
	}

	private void WordsList_LstMouseReleased(MouseEvent evt) {
		// jListSamples.clearSelection();
		// refresh(false, false);
	}

	private void word_startMouseReleased(MouseEvent evt) {
		dictionary.runWord(false, false);
	}

	private void runTrainerBtnMouseReleased(MouseEvent evt) {
		dictionary.runTrainer();
	}

	private void InUseJListMouseReleased(MouseEvent evt) {
		WordsList_Lst.setSelectedValue(InUseJList.getSelectedValue(), true);
	}

	private void InUseJListKeyReleased(KeyEvent evt) {
		// System.out.println("InUseJList.keyReleased, event="+evt);
		// TODO add your code for InUseJList.keyReleased

		if (evt.getKeyCode() == 127) {// Del
			if (WordsList_Lst.getSelectedIndex() < dictionary.getAllWords().length) {
				dictionary.getCurrentPair().setInuse(false);
				WordsList_Lst
						.setSelectedIndex(WordsList_Lst.getSelectedIndex() + 1);
			}
		}
		inUseListRefresh();
	}

	private void inUseListRefresh() {
		int ind = InUseJList.getSelectedIndex();
		Object o = InUseJList.getSelectedValue();
		InUseJList.setListData(dictionary.getAllInUseWords());
		// if(dictionary.getAllInUseWords()[ind].equals(o)){
		// InUseJList.setSelectedValue(o, true);
		// }
		// InUseJList
		if (ind != -1) {
			if (ind < dictionary.getAllInUseWords().length)
				InUseJList.setSelectedIndex(ind);
			else
				InUseJList
						.setSelectedIndex(dictionary.getAllInUseWords().length - 1);
		}
	}

	private void addToRight_oneMouseReleased(MouseEvent evt) {
		dictionary.getCurrentPair().setInuse(true);
		inUseListRefresh();
	}

	private void addToRight_allMouseReleased(MouseEvent evt) {
		for (Pair p : dictionary.getAllPairs()) {
			p.setInuse(true);
		}
		inUseListRefresh();
	}

	private void dellFromRight_oneMouseReleased(MouseEvent evt) {

		dictionary.getCurrentPair().setInuse(false);
		inUseListRefresh();
	}

	private void dellFromRight_allMouseReleased(MouseEvent evt) {
		for (Pair p : dictionary.getAllPairs()) {
			p.setInuse(false);
		}
		inUseListRefresh();
	}

	private void selectNextRandomBtnMouseReleased(MouseEvent evt) {
		String word = dictionary.getAllInUseWords()[nextSelRandom
				.nextInt(dictionary.getAllInUsePairs().length)];
		InUseJList.setSelectedValue(word, true);
	}

	private void thisMouseReleased(MouseEvent evt) {
/*	for(int i = 0; i < dictionary.getAllWords().length; i++){
			WordsList_Lst.setSelectedValue(dictionary.getAllWords()[i], true);
			dictionary.playCurrentAudioRecord(true, true);
		} */
		
	}

	private void jButton45MouseReleased(MouseEvent evt) {
		System.out.println("jButton45.mouseReleased, event=" + evt);
	}

	private void inUseOnlyWordsShowInWord(MouseEvent evt) {
		dictionary.runWord(true, false);
	}
	
	private void jButton47MouseReleased(MouseEvent evt) {
		dictionary.runWord(true, true);
	}
	
	private void jButton48MouseReleased(MouseEvent evt) {
		dictionary.upCurrentSample();
		refresh(false, true);
	}
	
	private void jButton49MouseReleased(MouseEvent evt) {
		dictionary.playCurrentAudioRecord(true, true);
	}

	private javax.swing.JButton Load_Btn;
	private javax.swing.JButton Remove_Btn;
	private javax.swing.JButton Rename_Btn;
	private javax.swing.JButton Save_Btn;
	private javax.swing.JTextField Transcription_TextF;
	private javax.swing.JTextField Translate_TextF;
	private javax.swing.JTextField Word_TextF;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton11;
	private javax.swing.JButton jButton12;

	private javax.swing.JButton jButton13;
	private javax.swing.JButton jButton14;
	private javax.swing.JButton jButton15;
	private javax.swing.JButton jButton16;
	private javax.swing.JButton jButton17;
	private javax.swing.JButton jButton18;
	private javax.swing.JButton jButton19;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton20;
	private javax.swing.JButton jButton21;
	private javax.swing.JButton jButton22;
	private javax.swing.JButton jButton23;
	private javax.swing.JButton jButton24;
	private javax.swing.JButton jButton25;
	private javax.swing.JButton jButton26;
	private javax.swing.JButton jButton27;
	private javax.swing.JButton jButton28;
	private javax.swing.JButton jButton29;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton30;
	private javax.swing.JButton jButton31;
	private javax.swing.JButton jButton32;
	private javax.swing.JButton jButton33;
	private javax.swing.JButton jButton34;
	private javax.swing.JButton jButton35;
	private javax.swing.JButton jButton36;
	private javax.swing.JButton jButton37;
	private javax.swing.JButton jButton38;
	private javax.swing.JButton jButton39;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton40;
	private javax.swing.JButton jButton41;
	private javax.swing.JButton jButton42;
	private javax.swing.JButton jButton43;
	private javax.swing.JButton jButton44;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JButton jButton9;
	private JCheckBox jChBoxPlayOnSelections;
	private JButton jButtDeleteRecord;
	private JList WordsList_Lst;
	private JButton jButton10;
	private JButton jButtPlay;
	private JButton jButtRecordding;
	private JButton jButton49;
	private JButton jButton48;
	private JButton jButton47;
	private JButton jButton46;
	private JButton jButton45;
	private JScrollPane jScrollPane3;
	private JButton selectNextRandomBtn;
	private JButton dellFromRight_all;
	private JButton dellFromRight_one;
	private JButton addToRight_all;
	private JButton addToRight_one;
	private JList InUseJList;
	private JButton runTrainerBtn;
	private JButton word_start;
	private JScrollPane jScrollPane2;
	private JScrollPane jScrollPane1;
	private JTextField jTextSamplesSearch;
	private JTextField jTxtSearch;
	private JButton jButtRemSample;
	private JList jListSamples;
	// End of variables declaration//GEN-END:variables

}
